---
layout: post
title: "繰り返し処理(for文編)"
date: 2013-08-01 21:07
comments: true
categories: 
---

同じような事を繰り返し実行したい時に、forやwhileというものが役立ちます。  
これらは、ある条件がくるまでずっと処理の繰り返しをするものです。

  　
### どんな時に繰り返し処理が必要になる？

MT4では、例えば次のような場合この繰り返し処理を使います。

> -  現在保有する全ポジションを、繰り返し処理で全てクローズする場合
> - 現在の足から過去１０本の足のうち、2番に安い足がどれかを探す
>- 一つのEAで、USDJPY, EURUSD, EURJPY等のBidをPrintする。
	- Print：Expertログに情報を出力（表示）することができるMT4の関数。

・・・などなど 

まあ、あまり深くは考えずに、必要だと思った時に繰り返し処理を使って見てください。

  　
### forの使い方

forは次のように使います。

```
for (int i=開始値; i< 終了値; 増分) {
    // 繰り返し実行したい処理をここに書く
}
```

　  

このままだとわかりにくいので、具体例を挙げます。
```
//+------------------------------------------------------------------+
//|                                                   loop_test1.mq4 |
//|                                                       MT4-school |
//+------------------------------------------------------------------+
#property copyright "MT4-school"
#property link      ""

int start() {
    for (int i=0; i<10; i++) {
        Print(i + "回ループしました！");
    }
    return(0);
}
```

　  
ここでのfor文はどういう意味かと申しますと、次のような意味になります。

No    | 内容       　| 意味
------|-------------|-----------------------------------
1項目  | int i = 0 　|　iという変数をカウンターとして、ループする。iの初期値は0とする。
2項目  | i < 10    　|　iが10未満の間、繰り返し処理する。
3項目  | i++       　|　1回ループする毎に、iの値を一つ増やす。

　

これを実行すると、Expertログにはこんなふうに表示されます。

   | Expertログ    
---|-----------------
　 | 0回繰り返しました！
　 | 1回繰り返しました！
　 | 2回繰り返しました！
　 | 3回繰り返しました！
 　| 4回繰り返しました！
　 | 5回繰り返しました！
　 | 6回繰り返しました！
　 | 7回繰り返しました！
　 | 8回繰り返しました！
　 | 9回繰り返しました！
  
  　

さらに具体例を挙げます。
```
//+------------------------------------------------------------------+
//|                                                   loop_test2.mq4 |
//|                                                       MT4-school |
//+------------------------------------------------------------------+
#property copyright "MT4-school"
#property link      ""

int start() {
    for (int i=9; i>=0; i--) {
        Print("ループしました！ i=" + i);
    }
    return(0);
}
```

　  
ここでのfor文はどういう意味かと申しますと、次のような意味になります。

No    | 内容       　| 意味
------|-------------|-----------------------------------
1項目  | int i = 9 　|　iという変数をカウンターとして、ループする。iの初期値は9とする。
2項目  | i >= 0    　|　iが0以上の間、繰り返し処理する。
3項目  | i--       　|　1回ループする毎に、iの値を一つ減らす。

　

これを実行すると、Expertログにはこんなふうに表示されます。

   | Expertログ    
---|-----------------
　 | ループしました！ i=9 　
　 | ループしました！ i=8 　
　 | ループしました！ i=7 　
　 | ループしました！ i=6 　
　 | ループしました！ i=5 　
　 | ループしました！ i=4 　
　 | ループしました！ i=3 　
　 | ループしました！ i=2 　
　 | ループしました！ i=1 　
　 | ループしました！ i=0 　
  　

ある決まった通貨ペアのBid値を取得したければ(というかExpertログに表示したければ)次のような感じでしょうか。

```
//+------------------------------------------------------------------+
//|                                                   for_sample.mq4 |
//|                                                       MT4-school |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "MT4-school"
#property link      ""

// PAIRS[0]="USDJPY", PAIRS[1]="EURUSD", PAIRS[2]="EURJPY"
string PAIRS[]={"USDJPY","EURUSD","EURJPY"};
int start() {
    for (int i=0; i<3; i++) {
        double bidPrice = MarketInfo(PAIRS[0], MODE_BID);
        Print(PAIRS[i] + " , Bid=" + bidPrice);
    }
    return(0);
}
```  
  
簡単な解説  
  
- initメソッドとdeinitメソッドは、使用しない場合は無くても大丈夫です。
- startメソッドの中では、PAIRS配列の大きさ(要素[0]〜[2]、計3要素）の数だけ、for文でループさせます。
- MarketInfoでそれぞれの通貨ペアのBid値を取得し、Printメソッドで通貨ペアの名前とそのBid値をExpertログに出力します。
-- ※string PAIRSをstartメソッドの外に定義しているのは、startメソッドが何回呼ばれようと、使う通貨ペアはかならずUSDJPY, EURUSD, EURJPYだからです。  
-- ※startメソッドはチャート上のティックが更新されるたびに何度も何度も呼び出されます。startの外は、EAが起動されたタイミングで一度だけ呼び出されます。  

  　

  
現在保有するすべてのポジションをクローズするなら、こんな感じでしょうか。

```
//+------------------------------------------------------------------+
//|                                                auto_closeAll.mq4 |
//|                                                       MT4-school |
//+------------------------------------------------------------------+
#property copyright "MT4-school"
#property link      ""

// スリッページ(3位に設定しておきましょうかね)
int slippage = 3;

int start() {

    // 持ってるポジションの数だけ繰り返す
    for (int i=OrdersTotal()-1; i>=0; i--) {

        // 全ポジションの中から、一つのポジションに着目する
        OrderSelect(i, SELECT_BY_POS);
                
        // 買いエントリーで建てたポジションならBidで売る        
        if  OrderType() == OP_BUY) {
            OrderClose(OrderTicket(), OrderLots(), Bid, slippage, Red);

        // 売りエントリーで建てたポジションならAskで買う
        } else if (OrderType() == OP_SELL) {
            OrderClose(OrderTicket(), OrderLots(), Ask, slippage, Green);
        }
    }

    return(0);
}
```
  　
  
こちらの例では、例えば３個のポジションを持っていたら、i=2、1,0と順繰りに減っていくように処理しています。
理由は、`OrderSelect(i, SELECT_BY_POS)`する時のことを考慮したためです。


`for (i=0; i<OrdersTotal(); i++) { `を使った場合、繰り返し処理は次のように進みます。
  
i | 残りポジション数 | OrderSelect(i, SELECT_BY_POS)の意味合い
--|-------------- |-------------------------------------
0 | 3             | OrderSlect(0, ..＝1番目のポジションに注目せよ　
1 | 2             | OrderSlect(1, ..＝2番目のポジションに注目せよ　
2 | 1             | OrderSlect(2, ..＝3番目のポジションに注目せよ　

　
上述のように、ポジションを扱う場合、for文のカウンタiを0,1,2と増加させると、

- 1週目のループではi=0。この時「OrderSelect(0, ..」となる。
    - ⇒ 残ポジションも3つあるので、1番めのポジションに注目できる。OK

- 2週目のループではi=1。この時「OrderSelect(1, ..」となる。
    - ⇒ 残ポジションも2つあるので、2番めのポジションに注目できる。OK

- 3週目のループではi=2。この時「OrderSelect(2, ..」となる。
    - ⇒ 残ポジションは1つなので、3番めのポジションに注目できない。NG!!


i=2になった時の残ポジション数がもう1しか無いにも関わらず、「3番めのポジションに注目せよ」となり、不整合が起こるのです。
これを防ぐため、i++ではなく　i--を使用しているのです。
  
　  
`for (int i=OrdersTotal()-1; i>=0; i--) {`と、ループの順番を工夫した結果、こんなふうになります。

i | 残りポジション数 | OrderSelect(i, SELECT_BY_POS)の意味合い
--|-------------- |-------------------------------------
2 | 3             | OrderSlect(2, ..＝3番目のポジションに注目せよ　
1 | 2             | OrderSlect(1, ..＝2番目のポジションに注目せよ　
0 | 1             | OrderSlect(0, ..＝1番目のポジションに注目せよ　
  
  
つまり、

- 1週目のループではi=2。この時「OrderSelect(2, ..」となる。
    - ⇒ 残ポジションも3つあるので、3番めのポジションに注目できる。OK

- 2週目のループではi=1。この時「OrderSelect(1, ..」となる。
    - ⇒ 残ポジションも2つあるので、2番めのポジションに注目できる。OK

- 3週目のループではi=0。この時「OrderSelect(0, ..」となる。
    - ⇒ 残ポジションも1つあるので、1番めのポジションに注目できる。OK


少し難しかったかもしれませんが、こういった考察を都度自分で考える必要はありません。
覚えた事をどこかに書き留めておいて、必要な時にコピペしましょう。
楽に事を済ませられるのが一番です！

> __所長日記__
> 
> 所長は炭酸が好き。妻に炭酸水メーカーを買ってもらいました。
> 


